options
{
  static = true;
  JAVA_UNICODE_ESCAPE = true;
}

PARSER_BEGIN(ReciptionParser)
package com.reciption;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.*;

public class ReciptionParser
{
}

PARSER_END(ReciptionParser)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
}

TOKEN :
{
  < INGREDIENT_HEADING : "\"Ainekset\"" >
}



TOKEN :
{
  < UNIT :
    < KG >
  | < TEASPOON >
  | < DECILITER >
  | < SPOON >
  | < GRAM >
  | < LITER > >
| 
  < #KG : "\"kg\"" >
| 
  < #TEASPOON : "\"tl\"" >
|    
  < #SPOON : "\"rkl\"" >
| 
  < #DECILITER : "\"dl\"" >
| 
  < #GRAM : "\"g\"" >
| 
  < #LITER : "\"l\"" >
}


TOKEN :
{
  < AMOUNT : "\"" ("n. ")* <INTEGER_LITERAL> "\"">
|
< AMOUNT_RANGE : "\"" < INTEGER_LITERAL > "-" <INTEGER_LITERAL> "\"">
}

TOKEN :
{
  < INTEGER_LITERAL : 
    < DECIMAL_LITERAL > ([ "l", "L" ])? 
  >
| 
  < #DECIMAL_LITERAL : [ "1"-"9" ] ([ "0"-"9" ])* >
| 
  < FLOATING_POINT_LITERAL :
    ([ "0"-"9" ])+ "." ([ "0"-"9" ])* (< EXPONENT >)? ([ "f", "F", "d", "D" ])?
  | "." ([ "0"-"9" ])+ (< EXPONENT >)? ([ "f", "F", "d", "D" ])?
  | ([ "0"-"9" ])+ < EXPONENT > ([ "f", "F", "d", "D" ])?
  | ([ "0"-"9" ])+ (< EXPONENT >)? [ "f", "F", "d", "D" ] 
  >
| 
  < #EXPONENT : [ "e", "E" ] ([ "+", "-" ])? ([ "0"-"9" ])+ >
| 
  < STRING_LITERAL :
    "\""
    (
      (~[ "\"", "\\", "\n", "\r" ])
    |
      (
        "\\"
        (
          [ "n", "t", "b", "r", "f", "\\", "'", "\"" ]
        | [ "0"-"7" ] ([ "0"-"7" ])?
        | [ "0"-"3" ] [ "0"-"7" ] [ "0"-"7" ]
        )
      )
    )*
    "\"" 
  >
}


void recipe() :
{
  Token s;
}
{
  (< STRING_LITERAL >|< AMOUNT >)* s = < INGREDIENT_HEADING >
  {
    System.out.println("Got INGREDIENT_HEADING = " + s);
  }
  ingredientList() < EOF >
}

void ingredientList() :
{
  Token s;
  Token unit = null;
  Token ingredient;
  Token amount = null;
}
{
  (
    LOOKAHEAD(2) s = < STRING_LITERAL >
    {
      System.out.println("Got STRING_LITERAL = " + s.image);
    }
  | 
    (amount = < AMOUNT >| amount = < AMOUNT_RANGE >)* (unit = < UNIT >)* ingredient = < STRING_LITERAL >
    {
      System.out.println("Got amount = " + amount.image + " - unit = " + unit.image + " - ingredient = " + ingredient.image);
    }
  )+
}
